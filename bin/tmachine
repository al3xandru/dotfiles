#!/bin/bash

backup () {
    if [ -d "$BACKUP_TARGET" ]; then
        TODAY=`date +"%Y%m%d %H:%M"`
        # /System/Library/CoreServices/backupd.bundle/Contents/Resources/backupd-helper > /dev/null 2>&1
        /usr/bin/tmutil startbackup -b -d ${DEST_ID}
        if [ $? -eq 0 ]; then
            echo "${TODAY}" >> $HOME/Library/Logs/com.mypopescu.timemachine.log
        fi
    fi
}


if [[ "$HOSTNAME" = mandelbrot.* ]]; then
    # BACKUP_TARGET="/Volumes/rMBPTimeMachine/Backups.backupdb"
    BACKUP_TARGET="/Volumes/RMBPTM/Backups.backupdb"
    DEST_ID="B98020CA-9E8F-46F8-81FF-0E4E68283314"
elif [[ "$HOSTNAME" = macky.* ]]; then 
    BACKUP_TARGET="/Volumes/AirLionTimeMachine/Backups.backupdb"
elif [[ "$HOSTNAME" = leibniz.* ]]; then
    # previous version
    # BACKUP_TARGET="/Volumes/DatastaxTM/Backups.backupdb"
    # DEST_ID="AD0278CA-5A21-487D-A3ED-F4CDDC1F3196"
    BACKUP_TARGET="/Volumes/WMBPTM/Backups.backupdb"
    DEST_ID="D0831307-B528-48F7-B9B7-6CEE464E8B77"
elif [[ "$HOSTNAME" = lorenz.* ]]; then
    BACKUP_TARGET="/Volumes/TB2016TM/Backups.backupdb"
    DEST_ID="0AE79734-CA65-4729-B134-C46B49FE024E"
elif [ "$HOSTNAME" = "alexandp-mac" ]; then
    BACKUP_TARGET="/Volumes/ORATM/Backups.backupdb"
    DEST_ID="DA8F0776-79F0-4A05-B181-290841C5C476"
else
    echo "Unknown machine name: ${HOSTNAME}"
    exit 1
fi
TODAY=`date +"%Y%m%d"`
PREV_BACKUP_TIME=`tail -1 $HOME/Library/Logs/com.mypopescu.timemachine.log`
PREV_BACKUP=`tail -1 $HOME/Library/Logs/com.mypopescu.timemachine.log | cut -d' ' -f1`
if [ -d "$BACKUP_TARGET" ]; then
    # trigger TimeMachine
    if [ "$1" == "-f" ]; then
        echo "Latest backup: $(tmutil latestbackup)"
        echo "Forced backup of $HOSTNAME -> $BACKUP_TARGET"
        backup
    else
        echo "Machine: $HOSTNAME -> $BACKUP_TARGET"
        if [ -z "$PREV_BACKUP" ]; then
            echo "No previous backup found for $HOSTNAME -> $BACKUP_TARGET"
            backup
        else
            echo "Latest backup: $(tmutil latestbackup)"
            if [ "${PREV_BACKUP}" != `date -v-2d "+%Y%m%d"` -a "${PREV_BACKUP}" != `date -v-1d "+%Y%m%d"` -a "${PREV_BACKUP}" != `date "+%Y%m%d"` ]; then
                echo "Previous backup is old ($PREV_BACKUP_TIME) for $HOSTNAME -> $BACKUP_TARGET"
                backup
            else
                echo "Backup from $PREV_BACKUP_TIME found for $HOSTNAME -> $BACKUP_TARGET" 
            fi
        fi
    fi
else
    if [ -z "$PREV_BACKUP" ]; then
        echo "No previous backup found for $HOSTNAME -> $BACKUP_TARGET"
        osascript -l AppleScript -e "tell application \"Finder\" to display dialog \"Plug-in TimeMachine drive to backup\"" > /dev/null 2>&1
        if [ $? -eq 0 ]; then
            backup
        fi
    else
        if [ "${PREV_BACKUP}" != `date -v-2d "+%Y%m%d"` -a "${PREV_BACKUP}" != `date -v-1d "+%Y%m%d"` -a "${PREV_BACKUP}" != `date "+%Y%m%d"` ]; then
            echo "Previous backup is old ($PREV_BACKUP_TIME) for $HOSTNAME -> $BACKUP_TARGET"
            osascript -l AppleScript -e "tell application \"Finder\" to display dialog \"Plug-in TimeMachine drive to backup\"" > /dev/null 2>&1
            if [ $? -eq 0 ]; then
                backup
            fi
        else
            echo "Backup from $PREV_BACKUP_TIME found for $HOSTNAME -> $BACKUP_TARGET"
        fi
    fi
fi
