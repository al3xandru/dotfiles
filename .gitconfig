[user]
	name = Alex Popescu
	email = the.mindstorm@gmail.com
[gui]
	recentrepo = /Volumes/Macintosh HD/Users/alex/workspace/python/fof
[color]
	ui = auto
[core]
	excludesfile = ~/.gitignore_global
	quotepath = false
	editor = vim -f
    ; pager = delta
[interactive]
    diffFilter = delta --color-only --features=interactive
[delta]
    features = decorations
    line-numbers = true
[delta "interactive"]
    keep-plus-minus-markers = false
[delta "decorations"]
    ; commit-decoration-style = blue ol
    commit-style = raw
    file-style = omit
    ; hunk-header-decoration-style = blue box
    ; hunk-header-file-style = red
    ; hunk-header-line-number-stype = "#067a00"
    hunk-header-style = file line-number syntax
[alias]
    s = status
    a = add
    amend = commit --amend
    b = branch -a
    bd = branch -d
    bD = branch -D
    bn = checkout -b
    bav = branch -a -v
    cl = clone
    cl0 = clone --depth 1
    # c = commit
    ci = commit --interactive -v
    cm = commit -m
    cv = commit -v
    co = checkout
    # switch introduced in 2.23
    sw = switch
    sn = switch -c
    swn = switch -c
    d = diff
    dh = diff HEAD
    # --cached and --staged are synonymous
    dc = diff --staged
    dw = diff --word-diff
    dcw = diff --color-words
    dt = difftool
    dth = difftool HEAD
    dtc = difftool --staged
    fmr = "!f() { git fetch origin refs/pull-requests/${1}/from:${2}; }; f"
    who = shortlog -s --
    # commit graph w. changes per file
    l0 = log --graph --decorate --oneline
    l = log --graph --pretty=format:'%C(yellow)%h%C(red)%d%Creset %s %C(white)[%an, %ar]%Creset'
    ll = log --graph --stat --pretty=format:'%C(yellow)%h%C(red)%d%Creset %s %C(white)[%an, %ar]%Creset'
    lll = log -p --graph --decorate --stat
    la = log --graph --pretty=format:'%C(yellow)%h%C(red)%d%Creset %s %C(white)[%an, %ar]%Creset' --all
    lal = log --graph --stat --pretty=format:'%C(yellow)%h%C(red)%d%Creset %s %C(white)[%an, %ar]%Creset' --all
    la0 = log --oneline --graph --decorate --all --stat
    # patch format
    # lp = log -p
    # commit graph with changes per file and patch 
    origin = remote show origin
    findalias = "!grepalias() { git config --global --get-regexp alias | grep -i \"$1\" | awk -v nr=2 '{sub(/^alias\\./,\"\")};{printf \"\\033[31m%_10s\\033[1;35m\", $1};{sep=FS};{for (x=nr; x<=NF; x++) {printf \"%s%s\", sep, $x; }; print \"\\033[0;39m\"}'; }; grepalias"
# [Idiot proof git](https://softwaredoug.com/blog/2022/11/09/idiot-proof-git-aliases.html)
    mainbranch = "!git remote show origin | sed -n '/HEAD branch/s/.*: //p'"
    update = "!git pull origin $(git rev-parse --abbrev-ref HEAD) --rebase"
    squash = "!git rebase -v -i $(git mainbranch)"
[push]
    default = upstream

[diff]
    external = $HOME/bin/xdiff
	tool = xdiff
    ; the following doesn't work
    ; tool = xdiff

# REMOTE: the new version
# LOCAL: the old version
[difftool]
    prompt = false
[difftool "xdiff"]
	cmd = $HOME/bin/xdiff "$LOCAL" "$REMOTE"
[difftool "bbdiff"]
    cmd = $(brew --prefix)/bin/bbdiff --wait --resume "$REMOTE" "$LOCAL" 
; [difftool "diffmerge"]
;     cmd = diffmerge.sh --nosplash -ro2 -t1=Old -t2=New \"$LOCAL\" \"$REMOTE\" 
[difftool "Kaleidoscope"]
	cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"
    trustExitCode = true

[merge]
	tool = Kaleidoscope
[mergetool]
	prompt = false
[mergetool "Kaleidoscope"]
	cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
	trustExitCode = true

; [mergetool "diffmerge"]
;     cmd = diffmerge.sh --nosplash --merge --result=\"$MERGED\" -t1=New -t2=Base -t3=Old \"$LOCAL\" \"$BASE\" \"$REMOTE\"
; 	trustexitcode = false
; [mergetool "sourcetree"]
; 	cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
; 	trustExitCode = true

[filter "media"]
	clean = git-media-clean %f
	smudge = git-media-smudge %f
[filter "lfs"]
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f
	required = true
[init]
	defaultBranch = main
