#! /usr/bin/env python2.7

import os
import pipes
import subprocess
import sys

_DIRECTORIES = ['~']

def help():
    print sys.argv[0], "[-d=dir]* query"

if len(sys.argv) == 1:
    help()
    sys.exit(1)

interactive = False
start_idx = 1
if sys.argv[1] == '--interactive':
    interactive = True
    start_idx = 2

directories = []
terms = []
for arg in sys.argv[start_idx:]:
    if arg.startswith('-d='):
        directories.append(arg[3:])
    else:
        terms.append(arg)

if not directories:
    directories = _DIRECTORIES

cmd = ['/usr/bin/mdfind']
for dir in directories:
    cmd.append('-onlyin')
    cmd.append(pipes.quote(os.path.abspath(os.path.expanduser(dir))))

text_search = ["( kMDItemTextContent == '*%s*'cdw )" % terms[0]]
filename_search = ["( kMDItemDisplayName == '*%s*'cdw )" % terms[0]]
comment_search = ["( kMDItemFinderComment == '*%s*'cdw )" % terms[0]]
tag_search = ["( kMDItemOMUserTags == '*%s*'cdw )" % terms[0]]
prev_op = '&&'
for t in terms[1:]:
    if t == 'OR':
        prev_op = '||'
    elif t.startswith('-'):
        text_search.append(prev_op)
        text_search.append("( kMDItemTextContent != '*%s*'cdw )" % t[1:])
        filename_search.append(prev_op)
        filename_search.append("( kMDItemDisplayName != '*%s*'cdw )" % t[1:])
        comment_search.append(prev_op)
        comment_search.append("( kMDItemFinderComment != '*%s*'cdw )" % t[1:])
        tag_search.append(prev_op)
        tag_search.append("( kMDItemOMUserTags != '*%s*'cdw )" % t[1:])
        prev_op = '&&'    
    else:
        text_search.append(prev_op)
        text_search.append("( kMDItemTextContent == '*%s*'cdw )" % t)
        filename_search.append(prev_op)
        filename_search.append("( kMDItemDisplayName == '*%s*'cdw )" % t)
        comment_search.append(prev_op)
        comment_search.append("( kMDItemFinderComment == '*%s*'cdw )" % t)
        tag_search.append(prev_op)
        tag_search.append("( kMDItemOMUserTags == '*%s*'cdw )" % t)
        prev_op = '&&'

search = ""
if len(text_search) == 1:
    search = ' || '.join([text_search[0], filename_search[0], comment_search[0], tag_search[0]])
else:
    search = ' || '.join(["( %s )" % ' '.join(text_search), 
                          "( %s )" % ' '.join(filename_search), 
                          "( %s )" % ' '.join(comment_search), 
                          "( %s )" % ' '.join(tag_search)])

cmd.append('"' + search.replace('"', r'\"') + '"')
cmd_str = ' '.join(cmd)
# print search
# print cmd_str


p = subprocess.Popen(cmd_str, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
output = p.communicate()[0]
if p.returncode == 0:
    if interactive:
        idx = 0
        files = []
        for l in output.splitlines():
            files.append(l)
            print "%03s. %s" % (idx+1, l)
            idx += 1
        try:
            choice = raw_input("Choose file: ")
            choice = int(choice)
            os.system("open %s" % pipes.quote(files[choice-1]))
        except ValueError:
            pass
        except KeyboardInterrupt:
            pass
    else:
        for l in output.splitlines():
            print l
