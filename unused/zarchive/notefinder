#!/bin/bash
#
# * inspired by: http://brettterpstra.com/a-bash-function-for-markdown-bloggers/
# * bash arrays: http://tldp.org/LDP/abs/html/arrays.html
# * arithmetic expansion: http://tldp.org/LDP/abs/html/arithexp.html
#
#
# [MacDevCenter.com: The Power of mdfind](http://macdevcenter.com/lpt/a/6403)
# [File Metadata Search Programming Guide: File Metadata Query Expression Syntax](https://developer.apple.com/library/mac/#documentation/Carbon/Conceptual/SpotlightQuery/Concepts/QueryFormat.html)
# [File Metadata Attributes Reference: Spotlight Metadata Attributes](https://developer.apple.com/library/mac/#documentation/Carbon/Reference/MetadataAttributesRef/Reference/CommonAttrs.html#//apple_ref/doc/uid/TP40001694-SW1)
# [Searching for files by name Â« [[Blog alloc] init]](http://cocoacafe.wordpress.com/2007/06/17/fscatalogsearch/)
# [CodeSnippets: mdfind code](http://codesnippets.joyent.com/user/jv/tag/mdfind)
#  
if [ $# -eq 0 ]; then
    echo "  Usage $0 [-n -j -m] [-md] search"
    exit 1
fi
if [ "$1" = "-n" ]; then
    TARGET_DIRS=( ~/Dropbox/Elements/myNoSQL ~/Dropbox/ka/nvall )
    shift
elif [ "$1" = "-j" ]; then
    TARGET_DIRS=( ~/Dropbox/Elements/jots.mypopescu.com ~/Dropbox/ka/nvall )
    shift
elif [ "$1" = "-m" ]; then
    declare -a TARGET_DIRS=( ~/Dropbox/ka/nvall )
    shift
else
    declare -a TARGET_DIRS=( ~/Dropbox/Elements/myNoSQL ~/Dropbox/Elements/jots.mypopescu.com ~/Dropbox/ka/nvall  ~/Dropbox/ka/knarc ~/Dropbox/ka/myarx )
fi
ONLY_MARKDOWN="n"
if [ "$1" = "-md" ]; then
    ONLY_MARKDOWN="y"
    shift
fi
#echo "Target dirs: ${#TARGET_DIRS[*]}"
#echo "Target dirs: ${#TARGET_DIRS[@]}"
#echo "Target directories: ${TARGET_DIRS[*]}"
#echo "Markdown filter: $ONLY_MARKDOWN"
#echo "Args: $@"
OIFS=$IFS
IFS=$'\n'
i=0
declare -a results
for dir in "${TARGET_DIRS[@]}"; do
#    echo "Searching in ${dir}"
    if [ $ONLY_MARKDOWN = "y" ]; then
        _partial=$(mdfind -onlyin $dir "( $@ ) AND kind:markdown")
    else
        _partial=$(mdfind -onlyin $dir "( $@ )")
    fi
#    echo "Partial results:"
    for _r in ${_partial}; do
#        echo $_r
        results[$i]=${_r}
        (( i += 1 ))
    done
done
#echo "Results:"
#for r in "${results[@]}"; do
#    echo $r
#done
#echo "Results #: '${#results[@]}'"
if [[ ${#results[@]} > 0 ]]; then
    if [[ ${#results[@]} == 1 ]]; then
        echo ${results[0]}
        open ${results[0]}
    else
        PS3='Open file (Ctrl+c to cancel):'
        #select OPT in "Cancel" ${results[@]}; do
        select OPT in ${results[@]}; do
            if [ "Cancel" != $OPT ]; then
                open $OPT
            fi
            break
        done
    fi
fi
IFS=$OIFS