#!/usr/bin/env bash

#
# Dynamic EDITOR/VISUAL
export EDITOR="$HOME/bin/editor.sh"
export VISUAL="$HOME/bin/editor.sh"
#
# Make some commands not show up in history
export HISTIGNORE="ls:cd:cd -:pwd:exit:date:* --help"
export HISTCONTROL=ignoreboth:erasedups


# Prefer US English and use UTF-8
export LANG="en_US"
export LC_ALL="en_US.UTF-8"
export __CF_USER_TEXT_ENCODING=$UID:0x8000100:0x8000100


# Enable .dotfiles in fzf
export FZF_DEFAULT_COMMAND="find . -path '*/\.*' -type d -prune -o -type f -print -o -type l -print 2> /dev/null | sed s/^..//"
if [ -x /usr/local/bin/rg ]; then
    export FZF_DEFAULT_COMMAND='rg --files --no-ignore-vcs --hidden --line-number --glob "!.git/*"'
fi
export FZF_PREV="--preview=\"cat {}\""


#
# Homebrew
# disable analytics
export HOMEBREW_NO_ANALYTICS=1
# since Homebrew 2.0.0 brew cleanup is run
# https://brew.sh/2019/02/02/homebrew-2.0.0/
export HOMEBREW_NO_INSTALL_CLEANUP=1

# Homebrew vim
if [ -h "/usr/local/bin/vim" ]; then
    if [ `which vim` = "/usr/local/bin/vim" ]; then
        VIMLINK=`ls -l /usr/local/bin/vim | awk '{print $11}'`
        VIMDIR=`dirname $VIMLINK`
        # export VIMRUNTIME="/usr/local/bin/$VIMDIR/../share/vim/vim74"
        unset -v VIMDIR VIMLINK
    fi
fi
#
# ENV VARIABLES
#
# export QQDIR=$HOME/Dropbox/Dox/nvall

# Code repository
if [ -z "$ALLREPOS" ]; then
    export ALLREPOS=$HOME/Dropbox/workspaces
fi
export REPOSALL=$ALLREPOS
export MYREPOS=$ALLREPOS/mine
export REPOSMINE=$MYREPOS
export MYGO=$MYREPOS/goland/gospace
export GOMINE=$MYGO
export WORKREPOS=$ALLREPOS/work
export REPOSWORK=$WORKREPOS
export WORKGO=$WORKREPOS/gospace
export GOWORK=$WORKGO
# ln -s $MYREPOS $HOME/.marks/myrepos &>/dev/null
# ln -s $MYREPOS $HOME/.marks/reposmine &>/dev/null
# ln -s $MYGO $HOME/.marks/mygo &>/dev/null
# ln -s $MYGO $HOME/.marks/gomine &>/dev/null
# ln -s $WORKREPOS $HOME/.marks/workrepos &>/dev/null
# ln -s $WORKREPOS $HOME/.marks/reposwork &>/dev/null
# ln -s $WORKGO $HOME/.marks/workgo &>/dev/null
# ln -s $WORKGO $HOME/.marks/gowork &>/dev/null


# Go
if [ -z "$GOPATH" ]; then
    export GOPATH=$HOME/.golang
fi

# JVM
# Mac locations:
# - /System/Library/Java/JavaVirtualMachines/
# - /Library/Java/JavaVirtualMachines
# Mint locations:
# - /usr/lib/jvm
#
# There is a different mechanism for macOS using /usr/libexec/java_home
# see https://metaredux.com/posts/2018/11/05/managing-multiple-jdks-on-macos.html
if [ -z "$JAVA_HOME" ]; then
    vmdir=""
    case "$_OSTYPE" in
        "Lin" )
            vmdir="/usr/lib/jvm"
            ;;
        "Mac" )
            vmdir="/Library/Java/JavaVirtualMachines"
            ;;
    esac
    if [ -z "$VM_VERSION" ]; then
        VM_VERSION="jdk8"
    fi
    if [ -d "$vmdir" ]; then
        PJAVA_HOME=$(ls -1 "$vmdir" | grep "$VM_VERSION" | sort -r | head -1)
        if [ "$PJAVA_HOME" != "" ]; then
            case "$_OSTYPE" in
                "Lin")
                    export JAVA_HOME="$vmdir/$PJAVA_HOME"
                    ;;
                "Mac")
                    export JAVA_HOME="$vmdir/$PJAVA_HOME/Contents/Home"
                    ;;
            esac
        fi
    fi
    unset -v PJAVA_HOME vmdir
fi

function _findfirst {
    local base_dir="$1"
    local arg="$2"
    if [ -d "$base_dir" ]; then
        case "$_OSTYPE" in
            "Lin" )
                echo $(find $base_dir -maxdepth 1 -name $arg -type d)
                ;;
            "Mac" )
                echo $(find $base_dir -depth 1 -name $arg -type d | sort -r | head -1)
                ;;
        esac
    fi
}

# JAVA_TOOLS_DIR
JAVA_TOOLS_DIR="/usr/local/share/java"

if [ -z "$ANT_HOME" ]; then
    if [ -h "$JAVA_TOOLS_DIR/ant" -o -d "$JAVA_TOOLS_DIR/ant" ]; then
        ANT_HOME="$JAVA_TOOLS_DIR/ant"
    else
        ANT_HOME=$(_findfirst "$JAVA_TOOLS_DIR" "*ant*")
    fi
    if [ -n "$ANT_HOME" ]; then
        export ANT_HOME
    else
        unset ANT_HOME
    fi
fi

if [ -z "$MVN_HOME" ]; then
    if [ -h "$JAVA_TOOLS_DIR/maven" -o -d "$JAVA_TOOLS_DIR/maven" ]; then
        MVN_HOME="$JAVA_TOOLS_DIR/maven"
    else
        MVN_HOME=$(_findfirst "$JAVA_TOOLS_DIR" "*maven*")
    fi
    if [ -n "$MVN_HOME" ]; then
        export MVN_HOME
    else
        unset MVN_HOME
    fi
fi

if [ -z "$GRADLE_HOME" ]; then
    if [ -h "$JAVA_TOOLS_DIR/gradle" -o -d "$JAVA_TOOLS_DIR/gradle" ]; then
        GRADLE_HOME="$JAVA_TOOLS_DIR/gradle"
    else
        GRADLE_HOME=$(_findfirst "$JAVA_TOOLS_DIR" "*gradle*")
    fi
    if [ -n "$GRADLE_HOME" ]; then
        export GRADLE_HOME
        # export GRADLE_OPTS="-Xmx1024m -Xms192m -XX:+UseCompressedOops -XX:ReservedCodeCacheSize=256m -XX:+CMSClassUnloadingEnabled"
    else
        unset GRADLE_HOME
    fi
fi

if [ -z "$SBT_HOME" ]; then
    if [ -h "$JAVA_TOOLS_DIR/sbt" -o -d "$JAVA_TOOLS_DIR/sbt" ]; then
        SBT_HOME="$JAVA_TOOLS_DIR/sbt"
    else
        SBT_HOME=$(_findfirst "$JAVA_TOOLS_DIR" "*sbt*")
    fi
    if [ -n "$SBT_HOME" ]; then
        export SBT_HOME
    else
        unset SBT_HOME
    fi
fi

if [ -z "$CLOJURE_HOME" ]; then
    if [ -h "$JAVA_TOOLS_DIR/clojure" -o -d "$JAVA_TOOLS_DIR/clojure" ]; then
        CLOJURE_HOME="$JAVA_TOOLS_DIR/clojure"
    else
        CLOJURE_HOME=$(_findfirst "$JAVA_TOOLS_DIR" "*clojure*")
    fi
    if [ -n "$CLOJURE_HOME" ]; then
        export CLOJURE_HOME
    else
        unset CLOJURE_HOME
    fi
fi
unset JAVA_TOOLS_DIR
