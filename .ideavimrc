" mapping conflicts: Preferences -> Editor -> Vim Emulation

set clipboard+=unnamed
set history=10000
set hlsearch
set ignorecase
set smartcase
set incsearch
set scrolloff=5
set visualbell
set noerrorbells
" message on the status line to show current mode
set showmode

" relative line numbers by default
set nonumber relativenumber

" extensions
set surround

" gc and gcc
set commentary

" gr{motion}
set ReplaceWithRegister

" Objects: aa, ia
set argtextobj              " 
let g:argtextobj_pairs="(:),{:},[:]"

set ideajoin

" custom mappings
set timeoutlen=500
nnoremap j gj
vnoremap j gj
nnoremap k gk
vnoremap k gk

" These are not needed if Ctrl-E moves to end of line in Insert mode
" inoremap <C-a> <C-o>A
" inoremap <A-a> <C-o>A

" i_CTRL-O: allows to execute 1 normal command
inoremap <C-X> <C-O>
inoremap <leader>o <C-O>

nnoremap <leader>o <C-O>
nnoremap <leader>i <C-I>
nnoremap <leader>v <C-V>

" nnoremap <space><esc> :nohlsearch<CR>
" noremap <C-w>p :PrevSplitter<CR>
" nnoremap <space>hh :nohlsearch<CR>

" action based mappings
" Dash search
nnoremap <C-S-k> :action SmartSearchAction<CR>

" AceJump
nnoremap s :action AceAction<CR>
" nnoremap s :action KJumpAction.Char2<CR>

" mappings inspired by tpope/vim-unimpaired
nnoremap go :action Back<CR>
nnoremap g[ :action Back<CR>
nnoremap g] :action Forward<CR>
" nnoremap g[ <M-[>
" nnoremap g] <M-]>

nnoremap cn :action GotoNextError<CR>
nnoremap ]q :action GotoNextError<CR>
nnoremap cp :action GotoPreviousError<CR>
nnoremap [q :action GotoPreviousError<CR>
nnoremap ]l :action GotoNextError<CR>
nnoremap [l :action GotoPreviousError<CR>

nnoremap ]m :action MethodDown<CR>
nnoremap [m :action MethodUp<CR>


nmap yon :<C-U>setlocal norelativenumber number<CR>
nmap yor :<C-U>setlocal nonumber relativenumber<CR> 

" nnoremap gcc :action CommentByLineComment<CR>
" vnoremap gc :<bs><bs><bs><bs><bs>action VimVisualSwapSelections<CR>:action CommentByLineComment<CR>
" for block comments
vnoremap gC :<bs><bs><bs><bs><bs>action VimVisualSwapSelections<CR>:action CommentByBlockComment<CR>
vnoremap gb :<bs><bs><bs><bs><bs>action VimVisualSwapSelections<CR>:action CommentByBlockComment<CR>

" handlers IDE
" Emacs: go to beginning of line
sethandler <C-A> a:ide
" Emacs left
sethandler <C-B> a:ide
" Emacs go to end of line
sethandler <C-E> a:ide
" Emacs right
sethandler <C-F> a:ide
" Type hierarchy
sethandler <C-H> a:ide
" Implement methods
sethandler <C-I> a:ide
" Quick documentation
sethandler <C-J> a:ide
" Cut to end of line
sethandler <C-K> a:ide
" Scroll to center
sethandler <C-L> a:ide
" Move caret to matching brace
sethandler <C-M> a:ide
" Down (Note: in insert mode it doesn't work as intended)
sethandler <C-N> a:vim
" Override methods
sethandler <C-O> a:ide
" Up (Note: as with Ctrl-N, insert mode vim behavior is not the one expected)
sethandler <C-P> a:vim
" Run
sethandler <C-R> a:ide
" File structure
sethandler <C-S> a:ide
" Refactor thisâ€¦
sethandler <C-T> a:ide

" handlers VIM
" N: scroll; I: Unindent
sethandler <C-D> a:vim
" N: scroll upwards; I: Delete to beginning
sethandler <C-U> a:vim
" N: visual block
sethandler <C-V> n:vim i-x:ide
" N: window; I: Delete word before
sethandler <C-W> a:vim

